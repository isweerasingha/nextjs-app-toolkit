import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { __pascalCase__ } from '../types/__camelCase__Types';

// Defines the shape of the state for this feature.
export interface __pascalCase__State {
  items: __pascalCase__[];
  status: 'idle' | 'loading' | 'succeeded' | 'failed';
  error: string | null;
}

// The initial state for the __camelCase__ slice.
const initialState: __pascalCase__State = {
  items: [],
  status: 'idle',
  error: null,
};

const __camelCase__Slice = createSlice({
  name: '__camelCase__',
  initialState,
  reducers: {
    // Example reducer to set the items in the state.
    // You can add more reducers for creating, updating, or deleting items.
    set__pascalCase__s: (state, action: PayloadAction<__pascalCase__[]>) => {
      state.items = action.payload;
      state.status = 'succeeded';
    },
    // Example reducer for handling loading state
    setLoading: (state) => {
      state.status = 'loading';
    }
  },
  // You can also add extraReducers here to handle actions from async thunks.
});

// Export the actions generated by createSlice.
export const { set__pascalCase__s, setLoading } = __camelCase__Slice.actions;

// Export the reducer to be added to the Redux store.
export default __camelCase__Slice.reducer;